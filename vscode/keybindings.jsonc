// Place your key bindings in this file to override the defaults
[
  // Non-MRU ctrl-tab
  {
    "key": "ctrl-tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.closeAllEditors"
  },
  // <ctrl-w> never closes window
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "ctrl+k ctrl+w",
    "command": "-workbench.action.closeAllEditors"
  },
  // <ctrl-shift-d> duplicates selection/line
  {
    "key": "ctrl+shift+d",
    "command": "editor.action.duplicateSelection"
  },
  // <ctrl-$> toggles maximised editor
  {
    "key": "ctrl+oem_1",
    "command": "workbench.action.toggleEditorWidths"
  },
  // <ctrl-^> maximises bottom panel
  {
    "key": "ctrl+oem_6",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  // <ctrl-Ã¹> toggles the bottom panel
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+oem_8",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  // <ctrl-shift-,> opens shortcuts settings
  {
    "key": "ctrl+k ctrl+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+shift+oem_comma",
    "command": "workbench.action.openGlobalKeybindings"
  },
  // <shift-F5> restarts debugging
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.stop",
    "when": "inDebugMode"
  },
  {
    "key": "shift+f5",
    "command": "workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  // <ctrl-F5> stops debugging
  {
    "key": "ctrl+f5",
    "command": "workbench.action.debug.stop",
    "when": "inDebugMode"
  },
  // <F6> shows debugging console
  {
    "key": "ctrl+shift+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "debuggersAvailable"
  },
  {
    "key": "f6",
    "command": "workbench.debug.action.toggleRepl",
    "when": "debuggersAvailable"
  },
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.stop",
    "when": "inDebugMode && !focusedSessionIsAttach"
  },
  {
    "key": "ctrl+shift+oem_3",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported"
  },
  {
    "key": "ctrl+t r",
    "command": "workbench.action.tasks.runTask"
  },
  {
    "key": "ctrl+t b",
    "command": "workbench.action.tasks.build"
  },
  {
    "key": "ctrl+shift+b",
    "command": "-workbench.action.tasks.build"
  },
  {
    "key": "ctrl+alt+k",
    "command": "-bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+n",
    "command": "workbench.action.duplicateWorkspaceInNewWindow"
  },
  {
    "key": "ctrl+shift+oem_3",
    "command": "workbench.action.quickOpenTerm"
  },
  {
    "key": "ctrl+shift+oem_5",
    "command": "workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "ctrl+k ctrl+oem_5",
    "command": "-workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+r",
    "command": "workbench.action.reloadWindow",
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+alt+w",
    "command": "remote-wsl.newWindow"
  },
  {
    "key": "shift+alt+c",
    "command": "-copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+alt+o",
    "command": "workbench.action.openWorkspace"
  },
  {
    "key": "ctrl+shift+f5",
    "command": "-workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "shift+alt+f8",
    "command": "-editor.action.marker.prev",
    "when": "editorFocus"
  },
  {
    "key": "f8",
    "command": "editor.action.marker.next"
  },
  {
    "key": "shift+f8",
    "command": "editor.action.marker.prev"
  },
  {
    "key": "ctrl+shift+oem_1",
    "command": "-spotify.volumeDown"
  },
  {
    "key": "ctrl+shift+oem_1",
    "command": "-breadcrumbs.focus",
    "when": "breadcrumbsPossible"
  },
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.disconnect",
    "when": "focusedSessionIsAttach && inDebugMode"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "f8",
    "command": "-editor.action.marker.nextInFiles",
    "when": "editorFocus"
  },
  {
    "key": "shift+f8",
    "command": "-editor.action.marker.prevInFiles",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+oem_comma",
    "command": "-editor.action.inPlaceReplace.up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+shift+oem_3",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+oem_5",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+oem_5",
    "command": "-workbench.action.terminal.focusTabs",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "f6",
    "command": "-workbench.action.debug.pause",
    "when": "debugState == 'running'"
  },
  {
    "key": "f6",
    "command": "-workbench.action.focusNextPart"
  },
  {
    "key": "ctrl+oem_6",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl+g f",
    "command": "git.fetchPrune"
  },
  {
    "key": "ctrl+g p",
    "command": "git.pull"
  },
  {
    "key": "ctrl+g shift+p",
    "command": "git.push"
  },
  {
    "key": "ctrl+g b",
    "command": "git.checkout"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+shift+o",
    "command": "outline.focus"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-editor.action.formatDocument",
    "when": "editorLangId == 'gemfile' || editorLangId == 'ruby'"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-solargraph.search"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+shift+r",
    "command": "workbench.view.debug"
  },
  {
    "key": "ctrl+f5",
    "command": "-workbench.action.debug.run",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },
  {
    "key": "ctrl+t shift+r",
    "command": "workbench.action.tasks.restartTask"
  },
  {
    "key": "ctrl+shift+oem_8",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+alt+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+alt+p",
    "command": "projectManager.listProjects"
  },
  {
    "key": "shift+alt+p",
    "command": "-projectManager.listProjects"
  },
  {
    "key": "ctrl+t t",
    "command": "workbench.action.tasks.test"
  },
  {
    "key": "ctrl+alt+c",
    "command": "editor.action.showOrFocusStandaloneColorPicker"
  },
  {
    "key": "ctrl+g m",
    "command": "git.merge"
  },
  {
    "key": "ctrl+alt+r",
    "command": "-workbench.action.terminal.runRecentCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+alt+r",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "accessibilityModeEnabled && terminalFocus"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenView"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.closeWindow"
  },
  {
    "key": "alt+f4",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+alt+i",
    "command": "-workbench.panel.chatSidebar.copilot"
  },
  {
    "key": "ctrl+shift+oem_1",
    "command": "-breadcrumbs.focus",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  {
    "key": "f9",
    "command": "-workbench.action.chat.nextCodeBlock",
    "when": "hasChatProvider && inChat"
  },
  {
    "key": "ctrl+f9",
    "command": "-workbench.action.chat.nextFileTree",
    "when": "hasChatProvider && inChat"
  },
  {
    "key": "shift+f9",
    "command": "-workbench.action.chat.previousCodeBlock",
    "when": "hasChatProvider && inChat"
  },
  {
    "key": "ctrl+shift+f9",
    "command": "-workbench.action.chat.previousFileTree",
    "when": "hasChatProvider && inChat"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+alt+s",
    "command": "opensshremotes.openEmptyWindow"
  },
  {
    "key": "ctrl+shift+s",
    "command": "workbench.action.files.saveAs"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-workbench.action.toggleDevTools",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused && !inInteractiveInput && !interactiveEditorFocused"
  }
]