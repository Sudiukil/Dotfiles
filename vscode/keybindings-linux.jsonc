// Place your key bindings in this file to override the defaults
[
  // Ctrl+Q closes the window
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quit"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.closeWindow"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  // Alt+F5 disconnects the debugger
  {
    "key": "alt+f5",
    "command": "-chatEditor.action.navigateNext",
    "when": "chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0'"
  },
  {
    "key": "alt+f5",
    "command": "workbench.action.debug.disconnect",
    "when": "focusedSessionIsAttach && inDebugMode"
  },
  // Shift+F5 restarts debugging
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.disconnect",
    "when": "focusedSessionIsAttach && inDebugMode"
  },
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.stop",
    "when": "inDebugMode && !focusedSessionIsAttach"
  },
  {
    "key": "shift+f5",
    "command": "workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "ctrl+shift+f5",
    "command": "-workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  // Ctrl+F5 stops debugging
  {
    "key": "ctrl+f5",
    "command": "-workbench.action.debug.run",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },
  {
    "key": "ctrl+f5",
    "command": "-debug.openView",
    "when": "!debuggersAvailable"
  },
  {
    "key": "ctrl+f5",
    "command": "workbench.action.debug.stop"
  },
  // Ctrl+Alt+R reloads the window
  {
    "key": "ctrl+alt+r",
    "command": "-revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+alt+r",
    "command": "-workbench.action.terminal.runRecentCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+alt+r",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "accessibilityModeEnabled && terminalFocus"
  },
  {
    "key": "ctrl+alt+r",
    "command": "workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  // Ctrl+Shift+D duplicates the selection
  {
    "key": "ctrl+shift+d",
    "command": "-mssql.disconnect",
    "when": "editorTextFocus && editorLangId == 'sql'"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "ctrl+shift+d",
    "command": "editor.action.duplicateSelection"
  },
  // Ctrl+g chords are git actions
  {
    "key": "ctrl+g b",
    "command": "git.checkout"
  },
  {
    "key": "ctrl+g c",
    "command": "git.commitStaged"
  },
  {
    "key": "ctrl+g f",
    "command": "git.fetchPrune"
  },
  {
    "key": "ctrl+g o",
    "command": "git.openAllChanges"
  },
  {
    "key": "ctrl+g p",
    "command": "git.pull"
  },
  {
    "key": "ctrl+g shift+p",
    "command": "git.pushWithTags"
  },
  {
    "key": "ctrl+g s",
    "command": "git.stage"
  },
  // F8 focuses next problem
  {
    "key": "f8",
    "command": "-editor.action.marker.nextInFiles",
    "when": "editorFocus"
  },
  {
    "key": "f8",
    "command": "-PowerShell.RunSelection",
    "when": "editorTextFocus && editorLangId == 'powershell'"
  },
  {
    "key": "f8",
    "command": "editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
  },
  // Shift+F8 focuses previous problem
  {
    "key": "shift+f8",
    "command": "-editor.action.marker.prevInFiles",
    "when": "editorFocus"
  },
  {
    "key": "shift+f8",
    "command": "editor.action.marker.prev",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+f8",
    "command": "-editor.action.marker.prev",
    "when": "editorFocus"
  },
  // Ctrl+Shift+, opens keyboard shortcuts
  {
    "key": "ctrl+shift+[KeyM]",
    "command": "-github.copilot.acceptCursorComparisonPanelSolution",
    "when": "github.copilot.comparisonPanelEnabled && github.copilot.comparisonPanelVisible && activeWebviewPanelId == 'GitHub Copilot Comparison'"
  },
  {
    "key": "ctrl+shift+[KeyM]",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+k ctrl+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  // Ctrl+Alt+P opens Project Manager's projects to open
  {
    "key": "ctrl+alt+p",
    "command": "projectManager.listProjectsNewWindow"
  },
  // Ctrl+T chords are tasks actions
  {
    "key": "ctrl+t shift+r",
    "command": "workbench.action.tasks.restartTask"
  },
  {
    "key": "ctrl+t b",
    "command": "workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "ctrl+shift+b",
    "command": "-workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "ctrl+t r",
    "command": "workbench.action.tasks.runTask"
  },
  {
    "key": "ctrl+t t",
    "command": "workbench.action.tasks.test"
  },
  {
    "key": "ctrl+t k",
    "command": "workbench.action.tasks.terminate"
  },
  // Ctrl+Shift+Ã¹ selects a terminal
  {
    "key": "ctrl+shift+[Quote]",
    "command": "workbench.action.quickOpenTerm"
  },
  // Ctrl+Shift+W closes all editors
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+k ctrl+w",
    "command": "-workbench.action.closeAllEditors"
  },
  // Ctrl+Tab selects next tab/editor
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  // Ctrl+Shift+Tab selects previous tab/editor
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
  },
  // Ctrl+Shift+* splits editor horizontaly
  {
    "key": "ctrl+shift+[Backslash]",
    "command": "workbench.action.splitEditorOrthogonal"
  },
  // F6 toggles debug console
  {
    "key": "f6",
    "command": "-workbench.action.debug.pause",
    "when": "debugState == 'running'"
  },
  {
    "key": "f6",
    "command": "-workbench.action.focusNextPart"
  },
  {
    "key": "f6",
    "command": "workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "ctrl+shift+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  // Ctrl+$ toggles editor size
  {
    "key": "ctrl+[BracketRight]",
    "command": "workbench.action.toggleEditorWidths"
  },
  // Ctrl+^ toggles maximized panel
  {
    "key": "ctrl+[BracketLeft]",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  // Ctrl+! toggles sidebar
  {
    "key": "ctrl+[Slash]",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  // Ctrl+Shift+! toggles secondary sidebar
  {
    "key": "ctrl+shift+[Slash]",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+alt+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
]